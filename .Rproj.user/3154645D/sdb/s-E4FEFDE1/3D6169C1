{
    "contents" : "RMSE_train = array(,c(length(n_vec),length(r_vec),length(q_vec)));RMSE_test = array(,c(length(n_vec),length(r_vec),length(q_vec)))\nfor (i in 1:3){\n  n = n_vec[i]\n  Phi_train = apply(X_train,1,function(x){Reduce(kronecker,alply(array(feature(x,n,sigmaRBF,generator),c(n,ncol(X_train))),2)) })\n  Phi_test = apply(X_test,1,function(x){Reduce(kronecker,alply(array(feature(x,n,sigmaRBF,generator),c(n,ncol(X_test))),2)) })\n  for (j in 1:length(r_vec)){\n    r = round(n*r_vec[j])\n    for (k in 1:3){\n      q = q_vec[k]\n      res = Gauss_inf(X_train,y_train,sigma,n,r,sigmaRBF,q,generator,num_iterations,burnin)[num_iterations,]\n      RMSE_train[i,j,k] = sqrt(colSums((t(Phi_train) %*% res - f[1:nrow(X_train)])^2)/nrow(X_train))\n      RMSE_test[i,j,k] =   sqrt(colSums((t(Phi_test) %*% res - f_test)^2)/nrow(X_test))\n      print(paste(\"k= \", k))\n    }\n    print(paste(\"j= \", j))\n  }\n  print(paste(\"i= \", i))\n}\n}\n",
    "created" : 1432231008619.000,
    "dirty" : true,
    "encoding" : "",
    "folds" : "",
    "hash" : "2295282122",
    "id" : "3D6169C1",
    "lastKnownWriteTime" : 7957695015159098880,
    "path" : null,
    "project_path" : null,
    "properties" : {
        "tempName" : "Untitled1"
    },
    "source_on_save" : false,
    "type" : "r_source"
}