{
    "contents" : "\nN = 30;sigma=0.5;sigmaRBF = 5;\nseq_train = seq(0.5,by=1,length.out=N);seq_test = sort(N*runif(N/4))\nX_train = cbind(rep(seq_train,N),rep(seq_train,each=N))\nX_test = cbind(rep(seq_test,N/4),rep(seq_test,each=N/4))\nf = GPdraw(rbind(X_train,X_test),sigmaRBF,1)\ny = f + sigma*rnorm(length(f))\ny_train = y[1:nrow(X_train)]\nf_test = tail(f,nrow(X_test))\n##################################################################################################################\npersp3D(seq_train,seq_train,matrix(f,N,N),theta = 50, phi = 30, \n        expand = 0.5,xlab=\"x\",ylab=\"y\",zlab=\"z\",main=\"GP draw\")\n\npersp3D(seq_test,seq_test,matrix(f_test,N/2,N/2),theta = 50, phi = 30, \n        expand = 0.5,xlab=\"x\",ylab=\"y\",zlab=\"z\",main=\"GP draw\")\n\nn=100;generator=123;q=0.1;num_iterations=30;burnin=25;r=30\nout1 = Gauss_inf(X_train,y_train,sigma,n,r,sigmaRBF,q=0.1,generator,num_iterations,burnin)\n\n\n\n#training RMSE\nPhi_vec = apply(X_train,1,function(x){Reduce(kronecker,alply(array(feature(x,n,sigmaRBF,generator),c(n,ncol(X_train))),2)) })\nplot(f[1:nrow(X_train)],type=\"l\",main=paste(\"n=\",n, \", r= \", r),ylim=c(-4,3));\nRMSE_train2=c()\nfor (i in 1:22){\n  f_fit = t(Phi_vec) %*% res[i,]\n  #   lines(f_fit,col=i+1)\n  RMSE_train2[i] = sqrt(sum((f_fit-f[1:nrow(X_train)])^2)/nrow(X_train))\n}\n#test RMSE\nPhi_vec = apply(X_test,1,function(x){Reduce(kronecker,alply(array(feature(x,n,sigmaRBF,generator),c(n,ncol(X_test))),2)) })\nplot(f_test,type=\"l\",main=paste(\"n=\",n, \", r= \", r),ylim=c(-4,3));\nRMSE_test2=c()\nfor (i in 1:22){\n  f_fit = t(Phi_vec) %*% res[i,]\n  lines(f_fit,col=i+1)\n  RMSE_test2[i] = sqrt(sum((f_fit-f_test)^2)/nrow(X_test))\n}\n\npar(mfrow=c(1,2))\nplot(2:22,RMSE_train1[2:22],type=\"l\",xlab=\"number of iterations\",main=\"RMSE_train for r=30, q=2/3\",ylim=c(0.11,0.16));\nlines(2:22,RMSE_train2[2:22],col=3)\nabline(h=RMSE2,col=2);text(8,0.12,paste(\"RMSE exact = \",round(RMSE2,3)),col=2)\nlegend(\"topright\",c(\"n=100\",\"n=50\"),col=c(1,3),lwd=c(2,2))\nplot(2:22,RMSE_test1[2:22],type=\"l\",xlab=\"number of iterations\",main=\"RMSE_test for r=30, q=2/3\",ylim=c(0.09,0.15));\nlines(2:22,RMSE_test2[2:22],col=3)\nabline(h=RMSE1,col=2);text(8,0.096,paste(\"RMSE exact = \",round(RMSE1,3)),col=2)\nlegend(\"topright\",c(\"n=100\",\"n=50\"),col=c(1,3),lwd=c(2,2))\n\n\n\n######################################GP EXACT#####################################################\nKernel = function(x,y,sigmaRBF) {\n  tmp = matrix(1,nrow(x),nrow(y))\n  for (i in 1:nrow(x)) {\n    for (j in 1:nrow(y)){\n      tmp[i,j] = exp(-1/(2*sigmaRBF^2)*(t(x[i,]-y[j,])%*%(x[i,]-y[j,])))\n    }\n  } \n  return(tmp)\n}\n\n\npos_ker =  Kernel(X_test,X_train,sigmaRBF)\npos_tmp =  pos_ker %*% solve(Kernel(X_train,X_train,sigmaRBF) + sigma^2 * diag(nrow(X_train)))\npos_mean = pos_tmp %*% y_train\npos_cov =  Kernel(X_test,X_test,sigmaRBF) -pos_tmp %*% t(pos_ker)\n\nplot(f_test,type=\"l\")\nlines(pos_mean,col=3)\nRMSE1 = sqrt(sum((pos_mean-f_test)^2)/nrow(X_test))\nRMSE2 = sqrt(sum((pos_mean-f[1:nrow(X_train)])^2)/nrow(X_train))\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
    "created" : 1432290446257.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "4211914864",
    "id" : "F5E316A9",
    "lastKnownWriteTime" : 1432290536,
    "path" : "~/Dropbox/GP/GPT-master/demo/Gauss_demo.R",
    "project_path" : "demo/Gauss_demo.R",
    "properties" : {
        "tempName" : "Untitled1"
    },
    "source_on_save" : false,
    "type" : "r_source"
}